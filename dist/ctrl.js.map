{"version":3,"sources":["../src/ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","d3","panelDefaults","legend","show","position","chartType","labelOrientation","orientation","avgLineShow","labelSpace","links","datasource","interval","targets","cacheTimeout","nullPointMode","aliasColors","format","valueName","strokeWidth","fontSize","fontColor","colorSet","colorSch","GroupedBarChartCtrl","$scope","$injector","$rootScope","hiddenSeries","data","defaults","panel","events","on","onInitEditMode","bind","onDataReceived","onDataError","addEditorTab","subItem","value","render","forEach","push","d","color","dataList","length","res","attribs","rows","r","e","a","label","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","decimals","scaledDecimals","scope","elem","attrs","ctrl","panelContent","find","groupedBarChart","opts","margin","showLegend","legendType","axesConfig","element","options","keys","filter","key","avgList","stackVal","valores","map","name","i","o","scale","ordinal","range","category20","draw","width","height","graphwidth","left","right","graphheight","top","bottom","select","html","svg","append","attr","createScales","addAxes","addTooltips","addBar","addLegend","y0","rangeRoundBands","y1","x","linear","x0","x1","y","xAxis","axis","tickSize","orient","yAxis","domain","rangeBand","chartScale","domainCal","max","xAxisConfig","call","selectAll","style","yAxisConfig","bar","enter","barC","text","tips","elements","elementData","__data__","display","loc","defaultOptions","slice","reverse","onRender","Chart","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport * as d3 from './external/d3.v3.min';\nimport './css/groupedBarChart.css!';\n\nconst panelDefaults = {\n    legend: {\n        show: true,\n        position: 'On graph',\n    },\n    chartType: 'stacked bar chart',\n    labelOrientation: 'horizontal',\n    orientation: 'vertical',\n    avgLineShow: true,\n    labelSpace: 40,\n    links: [],\n    datasource: null,\n    interval: null,\n    targets: [{}],\n    cacheTimeout: null,\n    nullPointMode: 'connected',\n    aliasColors: {},\n    format: 'short',\n    valueName: 'current',\n    strokeWidth: 1,\n    fontSize: '80%',\n    fontColor: '#fff',\n    colorSet: [],\n    colorSch: []\n};\n\nexport class GroupedBarChartCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector, $rootScope) {\n        super($scope, $injector);\n        this.hiddenSeries = {};\n        this.data = null;\n\n        _.defaults(this.panel, panelDefaults);\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/banburybill-groupedbarchart-panel/partials/editor.html', 2);\n        this.addEditorTab('Colors', 'public/plugins/banburybill-groupedbarchart-panel/partials/colors.html', 3);\n    }\n\n    setUnitFormat(subItem) {\n        this.panel.format = subItem.value;\n        this.render();\n    }\n\n    onDataError() {\n        this.render();\n    }\n\n    updateColorSet() {\n        this.panel.colorSch = [];\n        this.panel.colorSet.forEach(d => this.panel.colorSch.push(d.color));\n        this.render();\n    }\n\n    onDataReceived(dataList) {\n        if (dataList && dataList.length) {\n            let res = [];\n            let attribs = {};\n            for ( const r of dataList[0].rows ) {\n                let e = {};\n                e[\"label\"] = r[0];\n                for ( const a of r[1] ) {\n                    e[a[0]] = +a[1];\n                    attribs[a[0]] = true;\n                }\n                res.push(e);\n            }\n            for ( let r of res ) {\n                for ( const a in attribs ) {\n                    if ( ! (a in r) ) {\n                        r[a] = 0;\n                    }\n                }\n            }\n            this.data = res;\n        } else {\n            this.data = [\n                {label:\"Machine001\", \"Off\":15, \"Down\":50, \"Run\": 0, \"Idle\":40},\n                {label:\"Machine002\", \"Off\":15, \"Down\":5, \"Run\":40, \"Idle\":15},\n                {label:\"Machine003\", \"Off\":15, \"Down\":30, \"Run\":40, \"Idle\":15},\n                {label:\"Machine004\", \"Off\":15, \"Down\":30, \"Run\":80, \"Idle\":15}\n            ];\n        }\n\n        this.render();\n    }\n\n    formatValue(value) {\n        let decimalInfo = this.getDecimalsForValue(value);\n        let formatFunc = kbn.valueFormats[this.panel.format];\n        if (formatFunc) {\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        }\n        return value;\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        this.elem = elem;\n        this.panelContent = elem.find('.panel-content');\n        \n        class groupedBarChart {\n            constructor(opts) {\n                this.data = opts.data;\n                this.margin = opts.margin;\n                this.panel = opts.panel;\n                this.showLegend = opts.legend;\n                this.legendType = opts.position;\n                this.chartType = opts.chartType;\n                this.orientation = opts.orientation;\n                this.labelSpace = opts.labelSpace;\n                this.fontColor = opts.fontColor;\n                this.labelOrientation = opts.labelOrientation;\n                this.avgLineShow = opts.avgLineShow;\n                this.axesConfig = [];\n                this.element = elem.find(opts.element)[0];\n                this.options = d3.keys(this.data[0]).filter(function(key) { return key !== 'label'; });\n                this.avgList = {};\n                this.options.forEach(d => {this.avgList[d] = 0});\n                this.options = this.options.filter(d => d!=='valores');\n                this.data.forEach(d => {\n                    let stackVal = 0;\n                    d.valores = this.options.map((name, i, o) => {\n                        if (i !== 0) stackVal = stackVal + (+d[o[i-1]]);\n                        this.avgList[name] = this.avgList[name] + d[name];\n                        return {name: name, value: +d[name], stackVal: stackVal};\n                    });\n                });\n                this.options.forEach(d => {\n                    this.avgList[d] /= this.data.length;\n                });\n                if (opts.color.length == 0) {\n                    this.color = d3.scale.ordinal()\n                        .range(d3.scale.category20().range());\n                } else {\n                    this.color = d3.scale.ordinal()\n                        .range(opts.color);\n                }\n\n                this.draw();\n            }\n\n            draw() {\n                this.width = this.panel.width();\n                this.height = this.panel.height();\n                this.graphwidth = this.width/1.5 - this.margin.left - this.margin.right;\n                this.graphheight = this.height/1.5 - this.margin.top - this.margin.bottom;\n                d3.select(this.element).html(\"\");\n                this.svg = d3.select(this.element).append('svg');\n                this.svg.attr('width', this.width)\n                    .attr('height', this.height)\n                    //.attr('viewBox', `0, 0, ${this.width}, ${this.height}`)\n                    //.attr('preserveAspectRatio', 'xMinYMin meet')\n                    //.style('padding', '10px')\n                    .attr('transform', `translate(0, ${this.margin.top})`)\n                ;\n\n                this.createScales();\n                this.addAxes();\n                this.addTooltips();\n                this.addBar();\n                if (this.showLegend) this.addLegend(this.legendType);\n            }\n\n            createScales() {\n                switch(this.orientation) {\n                    case 'horizontal':\n                        this.y0 = d3.scale.ordinal()\n                            .rangeRoundBands([+this.graphheight, 0], .2, 0.5);\n\n                        this.y1 = d3.scale.ordinal();\n\n                        this.x = d3.scale.linear()\n                            .range([0, +this.graphwidth]);\n                        this.axesConfig = [this.x, this.y0, this.y0, this.y1, this.x];\n                        break;\n                    case 'vertical':\n                        this.x0 = d3.scale.ordinal()\n                            .rangeRoundBands([0, +this.graphwidth], .2, 0.5);\n\n                        this.x1 = d3.scale.ordinal();\n\n                        this.y = d3.scale.linear()\n                            .range([0, +this.graphheight]);\n\n                        this.axesConfig = [this.x0, this.y, this.x0, this.x1, this.y];\n                        break;\n                }\n\n            }\n\n            addAxes() {\n                this.xAxis = d3.svg.axis()\n                    .scale(this.axesConfig[0])\n                    .tickSize(-this.graphheight)\n                    .orient('bottom');\n\n                this.yAxis = d3.svg.axis()\n                    .scale(this.axesConfig[1])\n                    .orient('left');\n\n                this.axesConfig[2].domain(this.data.map(d => { return d.label; }));\n                this.axesConfig[3].domain(this.options).rangeRoundBands([0, this.axesConfig[2].rangeBand()]);\n\n                let chartScale = (this.chartType === 'bar chart') ? 0 : 1;\n                let domainCal = (this.orientation === 'horizontal') \n                    ? [0, d3.max(this.data, function(d) { return d3.max(d.valores, d => { return (d.value + chartScale*d.stackVal); }); })]\n                    : [d3.max(this.data, function(d) { return d3.max(d.valores, d => { return (d.value + chartScale*d.stackVal); }); }), 0];\n                this.axesConfig[4].domain(domainCal);\n\n                let xAxisConfig = this.svg.append('g')\n                    .attr('class', 'x axis')\n                    .attr('transform', `translate(${this.margin.left}, ${this.graphheight + this.margin.top})`)\n                    .call(this.xAxis)\n                    .selectAll('text')\n                    .style('fill', `${this.fontColor}`)\n\n                switch(this.labelOrientation) {\n                    case 'horizontal':\n                        break;\n                    case '45 degrees':\n                        xAxisConfig.style('text-anchor', 'end')\n                            .style('transform', 'rotate(-45deg)');\n                        break;\n                    case 'vertical':\n                        xAxisConfig.style('text-anchor', 'end')\n                            .style('transform', 'rotate(-90deg)');\n                        break;\n                }\n\n                let yAxisConfig = this.svg.append('g')\n                    .attr('class', 'y axis')\n                    .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                    .style('fill', `${this.fontColor}`)\n                    .call(this.yAxis)\n\n                yAxisConfig.selectAll('text')\n                    .style('fill', `${this.fontColor}`);\n                yAxisConfig.selectAll('path')\n                    .style('stroke', `${this.fontColor}`);\n            }\n\n            addBar() {\n                let scale = (this.chartType === 'bar chart') ? 1 : this.options.length;\n                switch(this.orientation) {\n                    case 'horizontal':\n                        this.avgLineShow && this.options.forEach(d => {\n                            this.svg.append('line')\n                                .attr('x1', this.x(this.avgList[d]))\n                                .attr('y1', this.graphheight)\n                                .attr('x2', this.x(this.avgList[d]))\n                                .attr('y2', 0)\n                                .attr('class', `${d} avgLine`)\n                                .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                                .style('display', 'none')\n                                .style('stroke-width', 2)\n                                .style('stroke', this.color(d))\n                                .style('stroke-opacity', 0.7);\n                        });\n\n                        this.bar = this.svg.selectAll('.bar')\n                            .data(this.data)\n                            .enter().append('g')\n                            .attr('class', 'rect')\n                            .attr('transform', d => {\n                                return `translate(${this.margin.left}, ${this.y0(d.label) + this.margin.top})`;\n                            });\n\n                        this.barC = this.bar.selectAll('rect')\n                            .data(d => { return d.valores; })\n                            .enter();\n\n                        \n                        this.barC.append('rect')\n                            .attr('height', this.y1.rangeBand()*scale)\n                            .attr('y', d => { \n                                return (this.chartType === 'bar chart') ? this.y1(d.name) : this.y0(d.label);\n                            })\n                            .attr('x', d => { \n                                return (this.chartType === 'bar chart') ? 0 : this.x(d.stackVal);\n                            })\n                            .attr('value', d => { return d.name;})\n                            .attr('width', (d) => { return this.x(d.value);})\n                            .style('fill', d => { return this.color(d.name);});\n\n                        break;\n                    case 'vertical':\n                        this.avgLineShow && this.options.forEach(d => {\n                            this.svg.append('line')\n                                .attr('x1', 0)\n                                .attr('y1', this.y(this.avgList[d]))\n                                .attr('x2', +this.graphwidth)\n                                .attr('y2', this.y(this.avgList[d]))\n                                .attr('class', `${d} avgLine`)\n                                .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                                .style('display', 'none')\n                                .style('stroke-width', 2)\n                                .style('stroke', this.color(d))\n                                .style('stroke-opacity', 0.7)\n                        });\n\n                        this.bar = this.svg.selectAll('.bar')\n                            .data(this.data)\n                            .enter().append('g')\n                            .attr('class', 'rect')\n                            .attr('transform', (d, i) => {\n                                return `translate(${this.x0(d.label)}, ${+this.graphheight + this.margin.top})`;\n                            });\n\n                        this.barC = this.bar.selectAll('rect')\n                            .data(d => { return d.valores.map(e => { e.label = d.label; return e;}); })\n                            .enter();\n\n                        this.barC.append('rect')\n                            .attr('id', (d, i) => { return `${d.label}_${i}`;})\n                            .attr('height', d => { return +this.graphheight - this.y(d.value);})\n                            .attr('y', d => { \n                                return (this.chartType === 'bar chart') ? this.y(d.value) - this.graphheight :  (this.y(d.value) - 2*(+this.graphheight) + this.y(d.stackVal));\n                            })\n                            .attr('x', (d, i) => { \n                                return (this.chartType === 'bar chart') ? this.x1(d.name) + this.margin.left : this.x1(d.name) - this.x1.rangeBand()*i + this.margin.left;\n                            })\n                            .attr('value', d => { return d.name;})\n                            .attr('width', this.x1.rangeBand()*scale)\n                            .style('fill', d => { return this.color(d.name);});\n\n                        break;\n                }\n\n                (this.chartType === 'bar chart') && this.barC.append('text')\n                    .attr('x', d => { \n                        return (this.orientation === 'horizontal') \n                        ? this.x(d.value) +5\n                        : this.x1(d.name) + this.x1.rangeBand()/4 + this.margin.left;  \n                    })\n                    .attr('y', d => { \n                        return (this.orientation === 'horizontal')\n                        ? this.y1(d.name) +(this.y1.rangeBand()/2)\n                        : this.y(d.value) - this.graphheight -8; \n                    })\n                    .attr('dy', '.35em')\n                    .style('fill', `${this.fontColor}`)\n                    .text(d => { return d.value ? d.value : ''; });\n\n                this.bar.on('mouseover', d => {\n                    this.tips.style('left', `${10}px`);\n                    this.tips.style('top', `${15}px`);\n                    this.tips.style('display', \"inline-block\");\n                    let elements = d3.selectAll(':hover')[0];\n                    let elementData = elements[elements.length-1].__data__;\n                    this.tips.html(`${d.label} , ${elementData.name} ,  ${elementData.value}`);\n                    if (this.avgLineShow) d3.selectAll(`.${elementData.name}`)[0][0].style.display = '';\n                });\n\n                this.bar.on('mouseout', d => {\n                    this.tips.style('display', \"none\");\n                    d3.selectAll('.avgLine')[0].forEach(d => {\n                       d.style.display = 'none';\n                    });\n                });\n            }\n\n            addLegend(loc) {\n                let labelSpace = this.labelSpace;\n                switch(loc) {\n                    case 'On graph':\n                        let defaultOptions = (this.chartType == 'bar chart' || this.orientation == 'horizontal') ? this.options.slice(): this.options.slice().reverse();\n                        this.legend = this.svg.selectAll('.legend')\n                            .data(defaultOptions)\n                            .enter().append('g')\n                            .attr('class', 'legend')\n                            .attr('transform', (d, i) => { return `translate(50,${i*20 + this.margin.top})`; });\n\n                        this.legend.append('rect')\n                            .attr('x', this.graphwidth - 18)\n                            .attr('width', 18)\n                            .attr('height', 18)\n                            .style('fill', this.color);\n\n                        this.legend.append('text')\n                            .attr('x', this.graphwidth - 24)\n                            .attr('y', 9)\n                            .attr('dy', '.35em')\n                            .style('text-anchor', 'end')\n                            .style('fill', `${this.fontColor}`)\n                            .text(d => { return d; });\n                        break;\n                    case 'Under graph':\n                        this.legend = this.svg.selectAll('.legend')\n                            .data(this.options.slice())\n                            .enter().append('g')\n                            .attr('class', 'legend')\n                            .attr('transform', (d, i) => { return `translate(${+i*labelSpace - this.graphwidth},${+this.graphheight + 24 + this.margin.top})`; });\n\n                        this.legend.append('rect')\n                            .attr('x', (d, i) => { return (i*labelSpace + this.margin.left + this.graphwidth*1 +0);})\n                            .attr('width', 18)\n                            .attr('height', 18)\n                            .style('fill', this.color);\n\n                        this.legend.append('text')\n                            .attr('x', (d, i) => { return (i*labelSpace + this.margin.left + this.graphwidth*1) +5; })\n                            .attr('dx', 18)\n                            .attr('dy', '1.1em')\n                            .style('text-anchor', 'start')\n                            .style('fill', `${this.fontColor}`)\n                            .text(d => { return d; });\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            addTooltips() {\n                this.tips = d3.select(this.element).append('div')\n                    .attr('class', 'toolTip');\n            }\n        }\n\n        function onRender() {\n            if(!ctrl.data) return;\n            var Chart = new groupedBarChart({\n                data: ctrl.data,\n                margin: {top: 30, left: 80, bottom: 10, right: 10},\n                panel: ctrl.panelContent,\n                element: '#chart',\n                legend: ctrl.panel.legend.show,\n                fontColor: ctrl.panel.fontColor,\n                position: ctrl.panel.legend.position,\n                chartType: ctrl.panel.chartType,\n                orientation: ctrl.panel.orientation,\n                labelOrientation: ctrl.panel.labelOrientation,\n                labelSpace: ctrl.panel.labelSpace,\n                avgLineShow: ctrl.panel.avgLineShow,\n                color: ctrl.panel.colorSch\n            });\n\n            ctrl.panel.colorSet = [];\n            Chart.options.forEach(d => {\n                ctrl.panel.colorSet.push({text: d, color: Chart.color(d)});\n            });\n        }\n\n        this.events.on('render', function() {\n            onRender();\n        });\n    }\n}\n\nGroupedBarChartCtrl.templateUrl = 'partials/module.html';\n"]}